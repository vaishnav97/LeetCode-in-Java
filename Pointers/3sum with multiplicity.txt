class Solution {
    private final int MOD = (int) (Math.pow(10, 9)) + 7;

    public int threeSumMulti(int[] nums, int target) {
        Arrays.sort(nums);

        long ans = 0;
        int n = nums.length;

        for (int i = 0; i < n - 2; i++) {
            int left = i + 1, right = n - 1, temp = target - nums[i];

            while (left < right) {
                int sum = nums[left] + nums[right];

                if (sum == temp) {
                    long left_count = 1, right_count = 1;

                    while (left < right && nums[left] == nums[left + 1]) {
                        left_count++;
                        left++;
                    }

                    while (left < right && nums[right] == nums[right - 1]) {
                        right_count++;
                        right--;
                    }

                    long calc = 0;

                    if (left == right) {
                        calc = left_count * (left_count - 1) / 2;
                    } else {
                        calc = left_count * right_count;
                    }

                    ans = (ans + calc + MOD) % MOD;

                    left++;
                    right--;

                } else if (sum < temp) {
                    left++;
                } else if (sum > temp) {
                    right--;
                }
            }
        }

        return (int) ans % MOD;
    }
}