class Solution {
    public int shortestWordDistance(String[] wordsDict, String word1, String word2) {
        Map<String, List<Integer>> map = new HashMap<>();

        for (int i = 0; i < wordsDict.length; i++) {
            String word = wordsDict[i];

            map.computeIfAbsent(word, v -> new ArrayList<>()).add(i);
        }

        List<Integer> index1 = map.get(word1);

        if (word1.equals(word2)) {
            int ans = Integer.MAX_VALUE;

            for (int i = 1; i < index1.size(); i++) {
                ans = Math.min(ans, index1.get(i) - index1.get(i - 1));
            }

            return ans;
        }

        List<Integer> index2 = map.get(word2);

        int p1 = 0, p2 = 0, ans = wordsDict.length;

        while (p1 < index1.size() && p2 < index2.size()) {
            ans = Math.min(ans, Math.abs(index1.get(p1) - index2.get(p2)));

            if (index1.get(p1) < index2.get(p2)) {
                p1++;
            } else {
                p2++;
            }

            if (ans == 1) {
                return ans;
            }
        }

        return ans;
    }
}