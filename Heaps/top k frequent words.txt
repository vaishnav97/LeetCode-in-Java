class Element {
    int freq;
    String word;

    Element(int freq, String word) {
        this.freq = freq;
        this.word = word;
    }
}

class ElementComparator implements Comparator<Element> {
    public int compare(Element e1, Element e2) {
        if (e1.freq == e2.freq) {
            return e2.word.compareTo(e1.word);
        }

        return Integer.compare(e1.freq, e2.freq);
    }
}

class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        List<String> res = new ArrayList<>();
        if (words.length == 0 || k == 0) {
            return res;
        }

        Map<String, Integer> freqMap = new HashMap<>();
        for (String word : words) {
            freqMap.put(word, freqMap.getOrDefault(word, 0) + 1);
        }

        Queue<Element> pq = new PriorityQueue<>(new ElementComparator());
        for (String key : freqMap.keySet()) {
            pq.add(new Element(freqMap.get(key), key));

            if (pq.size() > k) {
                pq.poll();
            }
        }

        while (pq.size() > 0) {
            res.add(0, pq.poll().word);
        }

        return res;
    }
}