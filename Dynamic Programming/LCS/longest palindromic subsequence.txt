class Solution {
    public int longestPalindromeSubseq(String input) {
        int n = input.length();

        int[][] dp = new int[n][n];

        for (int i = 0; i < n; i++) {
            dp[i][i] = 1;
        }

        for (int len = 2; len <= n; len++) {
            for (int left = 0; left <= n - len; left++) {
                int right = left + len - 1;

                if (input.charAt(left) == input.charAt(right)) {
                    if (len == 2) {
                        dp[left][right] = 2;
                    } else {
                        dp[left][right] = dp[left + 1][right - 1] + 2;
                    }
                } else {
                    dp[left][right] = Math.max(dp[left + 1][right], dp[left][right - 1]);
                }
            }
        }

        return dp[0][n - 1];
    }
}