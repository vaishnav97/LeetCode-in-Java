class Solution {
    private int helper(int[] nums, int[] dp, int n) {
        if (n < 0) {
            return 0;
        }

        if (dp[n] != -1) {
            return dp[n];
        }

        int op1 = helper(nums, dp, n - 1);
        int op2 = helper(nums, dp, n - 2) + nums[n];

        return dp[n] = Math.max(op1, op2);
    }

    public int rob(int[] nums) {
        int n = nums.length;

        int[] dp = new int[n];
        Arrays.fill(dp, -1);

        return helper(nums, dp, n - 1);
    }
}