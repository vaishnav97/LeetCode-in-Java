class Solution {
    private boolean isPossible(int[] weights, int maxDays, int maxWeight) {
        int days = 1;
        int totalWeights = 0;

        for (int weight : weights) {
            if (weight > maxWeight) {
                return false;
            }

            totalWeights += weight;
            if (totalWeights > maxWeight) {
                days++;
                totalWeights = weight;
            }

            if (days > maxDays) {
                return false;
            }
        }

        return true;
    }

    public int shipWithinDays(int[] weights, int days) {
        int start = weights[0], end = 0;
        for (int weight : weights) {
            end += weight;
        }

        int ans = start;

        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (isPossible(weights, days, mid)) {
                ans = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }

        return ans;
    }
}