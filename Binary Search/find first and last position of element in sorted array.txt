class Solution {
    private int getOccurence(int[] nums, int target, boolean isFirstOccurence) {
        int n = nums.length, start = 0, end = n - 1, ans = -1;

        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (nums[mid] == target) {
                ans = mid;

                if (isFirstOccurence) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }

            if (nums[mid] < target) {
                start = mid + 1;
            } else if (nums[mid] > target) {
                end = mid - 1;
            }
        }

        return ans;
    }

    public int[] searchRange(int[] nums, int target) {
        if (nums.length == 0) {
            return new int[] {-1, -1};
        }

        int firstOccurence = getOccurence(nums, target, true);

        if (firstOccurence == -1) {
            return new int[] {-1, -1};
        }

        int lastOccurence = getOccurence(nums, target, false);

        return new int[] {firstOccurence, lastOccurence};
    }
}