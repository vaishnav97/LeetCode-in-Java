class Solution {
    private boolean isPossible(int[] piles, int maxHours, int maxBananas) {
        int hours = 0;

        for (int pile : piles) {
            hours += pile / maxBananas;
            if (pile % maxBananas != 0) {
                hours++;
            }
        }

        return hours <= maxHours;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int start = 1, end = piles[0];
        for (int pile : piles) {
            end = Math.max(end, pile);
        }

        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (isPossible(piles, h, mid)) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }

        return start;
    }
}