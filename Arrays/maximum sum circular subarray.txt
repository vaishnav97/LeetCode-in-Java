class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int n = nums.length;
        if (n == 0) {
            return 0;
        }

        if (n == 1) {
            return nums[0];
        }

        int totalSum = 0;
        for (int num : nums) {
            totalSum += num;
        }

        int maxSum = nums[0], currentMaxSum = nums[0];
        int minSum = nums[0], currentMinSum = nums[0];

        for (int i = 1; i < n; i++) {
            currentMaxSum = Math.max(nums[i], currentMaxSum + nums[i]);
            maxSum = Math.max(maxSum, currentMaxSum);

            currentMinSum = Math.min(nums[i], currentMinSum + nums[i]);
            minSum = Math.min(minSum, currentMinSum);
        }

        if (totalSum == minSum) {
            return maxSum;
        }

        return Math.max(maxSum, totalSum - minSum);
    }
}