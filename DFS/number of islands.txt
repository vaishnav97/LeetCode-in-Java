class Solution {
    private int[] dx = { 0, 0, 1, -1 };
    private int[] dy = { 1, -1, 0, 0 };

    private void markIsland(char[][] grid, int x, int y) {
        if (x < 0 || x == grid.length || y < 0 || y == grid[0].length || grid[x][y] == '0') {
            return;
        }

        grid[x][y] = '0';

        for (int i = 0; i < 4; i++) {
            int newX = x + dx[i];
            int newY = y + dy[i];

            markIsland(grid, newX, newY);
        }

        return;
    }

    public int numIslands(char[][] grid) {
        int row = grid.length;

        if (row == 0) {
            return 0;
        }

        int col = grid[0].length;

        int count = 0;

        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (grid[i][j] == '1') {
                    count++;
                    markIsland(grid, i, j);
                }
            }
        }

        return count;
    }
}