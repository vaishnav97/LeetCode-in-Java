class Solution {
    private int[] dx = {0, 0, -1, 1};
    private int[] dy = {1, -1, 0, 0};

    private void markBoundary(int[][] grid, int x, int y) {
        grid[x][y] = 0;

        for (int i = 0; i < dx.length; i++) {
            int new_x = x + dx[i];
            int new_y = y + dy[i];

            if (new_x < 0 || new_x == grid.length || new_y < 0 || new_y == grid[0].length) {
                continue;
            }

            if (grid[new_x][new_y] == 0) {
                continue;
            }

            markBoundary(grid, new_x, new_y);
        }
    }

    public int numEnclaves(int[][] grid) {
        int row = grid.length, col = grid[0].length;

        for (int i = 0; i < row; i++) {
            if (grid[i][0] == 1) {
                markBoundary(grid, i, 0);
            }

            if (grid[i][col - 1] == 1) {
                markBoundary(grid, i, col - 1);
            }
        }

        for (int j = 0; j < col; j++) {
            if (grid[0][j] == 1) {
                markBoundary(grid, 0, j);
            }

            if (grid[row - 1][j] == 1) {
                markBoundary(grid, row - 1, j);
            }
        }

        int count = 0;

        for (int i = 1; i < row - 1; i++) {
            for (int j = 1; j < col - 1; j++) {
                if (grid[i][j] == 1) {
                    count++;
                }
            }
        }

        return count;
    }
}