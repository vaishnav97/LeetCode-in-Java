class Solution {
    private int[] dx = {0, 0, -1, 1};
    private int[] dy = {1, -1, 0, 0};

    private int helper(int[][] grid, int x, int y) {
        if (x < 0 || x == grid.length || y < 0 || y == grid[0].length) {
            return 0;
        }

        if (grid[x][y] == 0) {
            return 0;
        }

        grid[x][y] = 0;

        int count = 1;

        for (int i = 0; i < dx.length; i++) {
            count += helper(grid, x + dx[i], y + dy[i]);
        }

        return count;
    }

    public int maxAreaOfIsland(int[][] grid) {
        int ans = 0;

        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                if (grid[i][j] == 1) {
                    int res = helper(grid, i, j);

                    ans = Math.max(ans, res);
                }
            }
        }

        return ans;
    }
}