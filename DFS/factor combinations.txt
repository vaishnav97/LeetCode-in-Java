class Solution {
    private void helper(List<List<Integer>> res, List<Integer> path, int start, int n) {
        if (n <= 1 && path.size() > 1) {
            res.add(new ArrayList<>(path));
            return;
        }

        for (int i = start; i <= n; i++) {
            if (n % i == 0) {
                path.add(i);

                helper(res, path, i, n / i);

                if (path.size() > 0) {
                    path.remove(path.size() - 1);
                }
            }
        }
    }

    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> res = new ArrayList<>();
        if (n == 1) {
            return res;
        }

        List<Integer> path = new ArrayList<>();
        helper(res, path, 2, n);

        return res;
    }
}