class Solution {
    public boolean checkInclusion(String pattern, String word) {
        Map<Character, Integer> freq = new HashMap<>();

        int count = 0;
        for (Character ch : pattern.toCharArray()) {
            if (!freq.containsKey(ch)) {
                count++;
            }

            freq.put(ch, freq.getOrDefault(ch, 0) + 1);
        }

        char[] input = word.toCharArray();

        int i = 0, j = 0, k = pattern.length();

        while (j < input.length) {
            if (freq.get(input[j]) != null) {
                freq.put(input[j], freq.get(input[j]) - 1);

                if (freq.get(input[j]) == 0) {
                    count--;
                }
            }

            if ((j - i + 1) < k) {
                j++;
            } else if ((j - i + 1) == k) {
                if (count == 0) {
                    return true;
                }

                if (freq.get(input[i]) != null) {
                    freq.put(input[i], freq.get(input[i]) + 1);

                    if (freq.get(input[i]) == 1) {
                        count++;
                    }
                }

                i++;
                j++;
            }
        }

        return false;
    }
}