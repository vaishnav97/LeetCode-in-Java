class Solution {
    public int lengthOfLongestSubstring(String input) {
        if (input.length() <= 1) {
            return input.length();
        }

        HashMap<Character, Integer> freq = new HashMap<>();

        int start = 0, end = 0, ans = 0, distinct = 0;

        while (end < input.length()) {
            char ch = input.charAt(end);
            freq.put(ch, freq.getOrDefault(ch, 0) + 1);

            if (freq.get(ch) == 1) {
                distinct++;
            }

            while (distinct < (end - start + 1)) {
                ch = input.charAt(start);

                if (freq.get(ch) > 0) {
                    freq.put(ch, Math.max(0, freq.get(ch) - 1));

                    if (freq.get(ch) == 0) {
                        freq.remove(ch);

                        distinct--;
                    }
                }

                start++;
            }

            if (distinct == (end - start + 1)) {
                ans = Math.max(ans, distinct);
            }

            end++;
        }

        return ans;
    }
}